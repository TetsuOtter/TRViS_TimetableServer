<?php

/**
 * TRViS用 時刻表管理用API
 * PHP version 7.4
 *
 * @package dev_t0r
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 * Extend this class with your controller. You can inject dependencies via class constructor,
 * @see https://github.com/PHP-DI/Slim-Bridge basic example.
 */
namespace dev_t0r\trvis_backend\api;

use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Message\ResponseInterface;
use Slim\Exception\HttpNotImplementedException;

/**
 * AbstractStationApi Class Doc Comment
 *
 * @package dev_t0r\trvis_backend\api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
abstract class AbstractStationApi
{
    /**
     * POST createStation
     * Summary: 作成する
     * Notes: 指定のWorkGroupに属する Station (駅) を新しく作成する
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string $workGroupId WorkGroupのID
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function createStation(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $workGroupId
    ): ResponseInterface {
        $body = $request->getParsedBody();
        $message = "How about implementing createStation as a POST method in dev_t0r\trvis_backend\api\StationApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * DELETE deleteStation
     * Summary: 削除する
     * Notes: 既存のStationを削除する  なお、この操作はこのStationのOwner、またはこのStationが属するWorkGroupのOwnerのみが実行可能である。
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string $stationId StationのID
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function deleteStation(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $stationId
    ): ResponseInterface {
        $message = "How about implementing deleteStation as a DELETE method in dev_t0r\trvis_backend\api\StationApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getStation
     * Summary: 1件取得する
     * Notes: Station (駅) の情報を1件取得する
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string $stationId StationのID
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getStation(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $stationId
    ): ResponseInterface {
        $message = "How about implementing getStation as a GET method in dev_t0r\trvis_backend\api\StationApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getStationList
     * Summary: 複数件取得する
     * Notes: 指定のWorkGroupに属するStation (駅) の情報を複数件取得する
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string $workGroupId WorkGroupのID
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getStationList(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $workGroupId
    ): ResponseInterface {
        $queryParams = $request->getQueryParams();
        $p = (key_exists('p', $queryParams)) ? $queryParams['p'] : null;
        $limit = (key_exists('limit', $queryParams)) ? $queryParams['limit'] : null;
        $top = (key_exists('top', $queryParams)) ? $queryParams['top'] : null;
        $message = "How about implementing getStationList as a GET method in dev_t0r\trvis_backend\api\StationApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * PUT updateStation
     * Summary: 更新する
     * Notes: 既存のStationの情報を更新する
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param string $stationId StationのID
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function updateStation(
        ServerRequestInterface $request,
        ResponseInterface $response,
        string $stationId
    ): ResponseInterface {
        $body = $request->getParsedBody();
        $message = "How about implementing updateStation as a PUT method in dev_t0r\trvis_backend\api\StationApi class?";
        throw new HttpNotImplementedException($request, $message);
    }
}
