<?php

/**
 * TRViS用 時刻表管理用API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 * PHP version 7.2.5
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

/**
 * get getApiInfo
 * Summary: APIの情報を取得する
 * Notes: APIのバージョン等、APIの情報を取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/', 'ApiInfoController@getApiInfo');
/**
 * post issueToken
 * Summary: 認証トークンを発行
 * Notes: APIへのアクセスで使用するJWTを発行する
 * Output-Formats: [application/json]
 */
Route::post('/api/v1/auths', 'AuthController@issueToken');
/**
 * post createColor
 * Summary: 作成する
 * Notes: 指定のWorkGroupに属する Color (色) を新しく作成する
 * Output-Formats: [application/json]
 */
Route::post('/api/v1/colors', 'ColorController@createColor');
/**
 * get getColorList
 * Summary: 複数件取得する
 * Notes: 指定のWorkGroupに属するColor (色) の情報を複数件取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/colors', 'ColorController@getColorList');
/**
 * delete deleteColor
 * Summary: 削除する
 * Notes: 既存のColorを削除する  なお、この操作はこのColorのOwner、またはこのColorが属するWorkGroupのOwnerのみが実行可能である。
 * Output-Formats: [application/json]
 */
Route::delete('/api/v1/colors/{color_id}', 'ColorController@deleteColor');
/**
 * get getColor
 * Summary: 1件取得する
 * Notes: Color (色) の情報を1件取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/colors/{color_id}', 'ColorController@getColor');
/**
 * put updateColor
 * Summary: 更新する
 * Notes: 既存のColorの情報を更新する
 * Output-Formats: [application/json]
 */
Route::put('/api/v1/colors/{color_id}', 'ColorController@updateColor');
/**
 * get dumpTimetable
 * Summary: まとめて出力する
 * Notes: WorkGroupに属するデータをまとめて出力する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/dump/{work_group_id}', 'DumpController@dumpTimetable');
/**
 * post createStation
 * Summary: 作成する
 * Notes: 指定のWorkGroupに属する Station (駅) を新しく作成する
 * Output-Formats: [application/json]
 */
Route::post('/api/v1/work_groups/{work_group_id}/stations', 'StationController@createStation');
/**
 * get getStationList
 * Summary: 複数件取得する
 * Notes: 指定のWorkGroupに属するStation (駅) の情報を複数件取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/work_groups/{work_group_id}/stations', 'StationController@getStationList');
/**
 * delete deleteStation
 * Summary: 削除する
 * Notes: 既存のStationを削除する  なお、この操作はこのStationのOwner、またはこのStationが属するWorkGroupのOwnerのみが実行可能である。
 * Output-Formats: [application/json]
 */
Route::delete('/api/v1/work_groups/{work_group_id}/stations/{station_id}', 'StationController@deleteStation');
/**
 * get getStation
 * Summary: 1件取得する
 * Notes: Station (駅) の情報を1件取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/work_groups/{work_group_id}/stations/{station_id}', 'StationController@getStation');
/**
 * put updateStation
 * Summary: 更新する
 * Notes: 既存のStationの情報を更新する
 * Output-Formats: [application/json]
 */
Route::put('/api/v1/work_groups/{work_group_id}/stations/{station_id}', 'StationController@updateStation');
/**
 * post createStationTrack
 * Summary: 作成する
 * Notes: 指定のWorkGroupに属する Station (駅) を新しく作成する
 * Output-Formats: [application/json]
 */
Route::post('/api/v1/work_groups/{work_group_id}/stations/{station_id}/tracks', 'StationTrackController@createStationTrack');
/**
 * get getStationTrackList
 * Summary: 複数件取得する
 * Notes: 指定のWorkGroupに属するStation (駅) の情報を複数件取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/work_groups/{work_group_id}/stations/{station_id}/tracks', 'StationTrackController@getStationTrackList');
/**
 * delete deleteStationTrack
 * Summary: 削除する
 * Notes: 既存のStationを削除する  なお、この操作はこのStationのOwner、またはこのStationが属するWorkGroupのOwnerのみが実行可能である。
 * Output-Formats: [application/json]
 */
Route::delete('/api/v1/work_groups/{work_group_id}/stations/{station_id}/tracks/{station_track_id}', 'StationTrackController@deleteStationTrack');
/**
 * get getStationTrack
 * Summary: 1件取得する
 * Notes: Station (駅) の情報を1件取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/work_groups/{work_group_id}/stations/{station_id}/tracks/{station_track_id}', 'StationTrackController@getStationTrack');
/**
 * put updateStationTrack
 * Summary: 更新する
 * Notes: 既存のStationの情報を更新する
 * Output-Formats: [application/json]
 */
Route::put('/api/v1/work_groups/{work_group_id}/stations/{station_id}/tracks/{station_track_id}', 'StationTrackController@updateStationTrack');
/**
 * post createTimetableRow
 * Summary: 作成する
 * Notes: 指定のTrainに属する TimetableRow を新しく作成する
 * Output-Formats: [application/json]
 */
Route::post('/api/v1/work_groups/{work_group_id}/works/{work_id}/trains/{train_id}/timetable_rows', 'TimetableRowController@createTimetableRow');
/**
 * get getTimetableRowList
 * Summary: 複数件取得する
 * Notes: 指定のTrainに属するTimetableRowの情報を複数件取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/work_groups/{work_group_id}/works/{work_id}/trains/{train_id}/timetable_rows', 'TimetableRowController@getTimetableRowList');
/**
 * delete deleteTimetableRow
 * Summary: 削除する
 * Notes: 既存のTimetableRowを削除する  この操作は (認証済みの) 誰もが実行可能です。
 * Output-Formats: [application/json]
 */
Route::delete('/api/v1/work_groups/{work_group_id}/works/{work_id}/trains/{train_id}/timetable_rows/{timetable_row_id}', 'TimetableRowController@deleteTimetableRow');
/**
 * get getTimetableRow
 * Summary: 1件取得する
 * Notes: TimetableRowを1件取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/work_groups/{work_group_id}/works/{work_id}/trains/{train_id}/timetable_rows/{timetable_row_id}', 'TimetableRowController@getTimetableRow');
/**
 * put updateTimetableRow
 * Summary: 更新する
 * Notes: 既存のTimetableRowの情報を更新する
 * Output-Formats: [application/json]
 */
Route::put('/api/v1/work_groups/{work_group_id}/works/{work_id}/trains/{train_id}/timetable_rows/{timetable_row_id}', 'TimetableRowController@updateTimetableRow');
/**
 * post createTrain
 * Summary: 作成する
 * Notes: 指定のWorkに属する Train (列車) を新しく作成する
 * Output-Formats: [application/json]
 */
Route::post('/api/v1/work_groups/{work_group_id}/works/{work_id}/trains', 'TrainController@createTrain');
/**
 * get getTrainList
 * Summary: 複数件取得する
 * Notes: 指定のWorkに属するTrain (列車) の情報を複数件取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/work_groups/{work_group_id}/works/{work_id}/trains', 'TrainController@getTrainList');
/**
 * delete deleteTrain
 * Summary: 削除する
 * Notes: 既存のTrainを削除する  なお、この操作はこのTrainのOwner、またはこのTrainが属するWorkまたはWorkGroupのOwnerのみが実行可能である。
 * Output-Formats: [application/json]
 */
Route::delete('/api/v1/work_groups/{work_group_id}/works/{work_id}/trains/{train_id}', 'TrainController@deleteTrain');
/**
 * get getTrain
 * Summary: 1件取得する
 * Notes: Train (列車) の情報を1件取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/work_groups/{work_group_id}/works/{work_id}/trains/{train_id}', 'TrainController@getTrain');
/**
 * put updateTrain
 * Summary: 更新する
 * Notes: 既存のTrainの情報を更新する
 * Output-Formats: [application/json]
 */
Route::put('/api/v1/work_groups/{work_group_id}/works/{work_id}/trains/{train_id}', 'TrainController@updateTrain');
/**
 * post createWork
 * Summary: 作成する
 * Notes: 指定のWorkGroupに属する Work (仕業) を新しく作成する
 * Output-Formats: [application/json]
 */
Route::post('/api/v1/work_groups/{work_group_id}/works', 'WorkController@createWork');
/**
 * get getWorkList
 * Summary: 複数件取得する
 * Notes: 指定のWorkGroupに属するWork (仕業) の情報を複数件取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/work_groups/{work_group_id}/works', 'WorkController@getWorkList');
/**
 * delete deleteWork
 * Summary: 削除する
 * Notes: 既存のWorkを削除する  なお、この操作はこのWorkのOwner、またはこのWorkが属するWorkGroupのOwnerのみが実行可能である。
 * Output-Formats: [application/json]
 */
Route::delete('/api/v1/work_groups/{work_group_id}/works/{work_id}', 'WorkController@deleteWork');
/**
 * get getWork
 * Summary: 1件取得する
 * Notes: Work (仕業) の情報を1件取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/work_groups/{work_group_id}/works/{work_id}', 'WorkController@getWork');
/**
 * put updateWork
 * Summary: 更新する
 * Notes: 既存のWorkの情報を更新する
 * Output-Formats: [application/json]
 */
Route::put('/api/v1/work_groups/{work_group_id}/works/{work_id}', 'WorkController@updateWork');
/**
 * post createWorkGroup
 * Summary: 作成する
 * Notes: Workのまとまり (WorkGroup) を新しく作成する
 * Output-Formats: [application/json]
 */
Route::post('/api/v1/work_groups', 'WorkGroupController@createWorkGroup');
/**
 * get getWorkGroupList
 * Summary: 複数件取得する
 * Notes: Workのまとまり (WorkGroup) の情報を複数件取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/work_groups', 'WorkGroupController@getWorkGroupList');
/**
 * delete deleteWorkGroup
 * Summary: 削除する
 * Notes: 既存の「Workのまとまり (WorkGroup)」を削除する  なお、この操作はOwnerのみが実行可能である。
 * Output-Formats: [application/json]
 */
Route::delete('/api/v1/work_groups/{work_group_id}', 'WorkGroupController@deleteWorkGroup');
/**
 * get getWorkGroup
 * Summary: 1件取得する
 * Notes: Workのまとまり (WorkGroup) の情報を1件取得する
 * Output-Formats: [application/json]
 */
Route::get('/api/v1/work_groups/{work_group_id}', 'WorkGroupController@getWorkGroup');
/**
 * put updateWorkGroup
 * Summary: 更新する
 * Notes: 既存の「Workのまとまり (WorkGroup)」を更新する
 * Output-Formats: [application/json]
 */
Route::put('/api/v1/work_groups/{work_group_id}', 'WorkGroupController@updateWorkGroup');

Route::middleware('auth:api')->get('/user', function (Request $request) {
    return $request->user();
});
