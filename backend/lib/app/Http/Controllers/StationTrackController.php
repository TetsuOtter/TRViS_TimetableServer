<?php

/**
 * TRViS用 時刻表管理用API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 * PHP version 7.2.5
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class StationTrackController extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation createStationTrack
     *
     * 作成する.
     *
     * @param string $workGroupId WorkGroupのID (required)
     * @param string $stationId StationのID (required)
     *
     * @return Http response
     */
    public function createStationTrack($workGroupId, $stationId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing createStationTrack as a post method ?');
    }
    /**
     * Operation getStationTrackList
     *
     * 複数件取得する.
     *
     * @param string $workGroupId WorkGroupのID (required)
     * @param string $stationId StationのID (required)
     *
     * @return Http response
     */
    public function getStationTrackList($workGroupId, $stationId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getStationTrackList as a get method ?');
    }
    /**
     * Operation deleteStationTrack
     *
     * 削除する.
     *
     * @param string $workGroupId WorkGroupのID (required)
     * @param string $stationId StationのID (required)
     * @param string $stationTrackId Station TrackのID (required)
     *
     * @return Http response
     */
    public function deleteStationTrack($workGroupId, $stationId, $stationTrackId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteStationTrack as a delete method ?');
    }
    /**
     * Operation getStationTrack
     *
     * 1件取得する.
     *
     * @param string $workGroupId WorkGroupのID (required)
     * @param string $stationId StationのID (required)
     * @param string $stationTrackId Station TrackのID (required)
     *
     * @return Http response
     */
    public function getStationTrack($workGroupId, $stationId, $stationTrackId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getStationTrack as a get method ?');
    }
    /**
     * Operation updateStationTrack
     *
     * 更新する.
     *
     * @param string $workGroupId WorkGroupのID (required)
     * @param string $stationId StationのID (required)
     * @param string $stationTrackId Station TrackのID (required)
     *
     * @return Http response
     */
    public function updateStationTrack($workGroupId, $stationId, $stationTrackId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateStationTrack as a put method ?');
    }
}
