<?php

/**
 * TRViS用 時刻表管理用API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 * PHP version 7.2.5
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class WorkGroupController extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation createWorkGroup
     *
     * 作成する.
     *
     *
     * @return Http response
     */
    public function createWorkGroup()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['workGroup'])) {
            throw new \InvalidArgumentException('Missing the required parameter $workGroup when calling createWorkGroup');
        }
        $workGroup = $input['workGroup'];


        return response('How about implementing createWorkGroup as a post method ?');
    }
    /**
     * Operation getWorkGroupList
     *
     * 複数件取得する.
     *
     *
     * @return Http response
     */
    public function getWorkGroupList()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if ($input['p'] < 1) {
            throw new \InvalidArgumentException('invalid value for $p when calling WorkGroupController.getWorkGroupList, must be bigger than or equal to 1.');
        }
        $p = $input['p'];

        if ($input['limit'] > 100) {
            throw new \InvalidArgumentException('invalid value for $limit when calling WorkGroupController.getWorkGroupList, must be smaller than or equal to 100.');
        }
        if ($input['limit'] < 1) {
            throw new \InvalidArgumentException('invalid value for $limit when calling WorkGroupController.getWorkGroupList, must be bigger than or equal to 1.');
        }
        $limit = $input['limit'];


        return response('How about implementing getWorkGroupList as a get method ?');
    }
    /**
     * Operation deleteWorkGroup
     *
     * 削除する.
     *
     * @param string $workGroupId WorkGroupのID (required)
     *
     * @return Http response
     */
    public function deleteWorkGroup($workGroupId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteWorkGroup as a delete method ?');
    }
    /**
     * Operation getWorkGroup
     *
     * 1件取得する.
     *
     * @param string $workGroupId WorkGroupのID (required)
     *
     * @return Http response
     */
    public function getWorkGroup($workGroupId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getWorkGroup as a get method ?');
    }
    /**
     * Operation updateWorkGroup
     *
     * 更新する.
     *
     * @param string $workGroupId WorkGroupのID (required)
     *
     * @return Http response
     */
    public function updateWorkGroup($workGroupId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateWorkGroup as a put method ?');
    }
}
