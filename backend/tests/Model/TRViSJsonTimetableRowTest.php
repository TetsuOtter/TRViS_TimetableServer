<?php

/**
 * TRViS用 時刻表管理用API
 * PHP version 7.4
 *
 * @package dev_t0r
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace dev_t0r\trvis_backend\model;

use PHPUnit\Framework\TestCase;
use dev_t0r\trvis_backend\model\TRViSJsonTimetableRow;

/**
 * TRViSJsonTimetableRowTest Class Doc Comment
 *
 * @package dev_t0r\trvis_backend\model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \dev_t0r\trvis_backend\model\TRViSJsonTimetableRow
 */
class TRViSJsonTimetableRowTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "TRViSJsonTimetableRow"
     */
    public function testTRViSJsonTimetableRow()
    {
        $testTRViSJsonTimetableRow = new TRViSJsonTimetableRow();
        $namespacedClassname = TRViSJsonTimetableRow::getModelsNamespace() . '\\TRViSJsonTimetableRow';
        $this->assertSame('\\' . TRViSJsonTimetableRow::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        $this->markTestIncomplete(
            'Test of "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "stationName"
     */
    public function testPropertyStationName()
    {
        $this->markTestIncomplete(
            'Test of "stationName" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "locationM"
     */
    public function testPropertyLocationM()
    {
        $this->markTestIncomplete(
            'Test of "locationM" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "longitudeDeg"
     */
    public function testPropertyLongitudeDeg()
    {
        $this->markTestIncomplete(
            'Test of "longitudeDeg" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "latitudeDeg"
     */
    public function testPropertyLatitudeDeg()
    {
        $this->markTestIncomplete(
            'Test of "latitudeDeg" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "onStationDetectRadiusM"
     */
    public function testPropertyOnStationDetectRadiusM()
    {
        $this->markTestIncomplete(
            'Test of "onStationDetectRadiusM" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "fullName"
     */
    public function testPropertyFullName()
    {
        $this->markTestIncomplete(
            'Test of "fullName" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "recordType"
     */
    public function testPropertyRecordType()
    {
        $this->markTestIncomplete(
            'Test of "recordType" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "trackName"
     */
    public function testPropertyTrackName()
    {
        $this->markTestIncomplete(
            'Test of "trackName" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "driveTimeMM"
     */
    public function testPropertyDriveTimeMM()
    {
        $this->markTestIncomplete(
            'Test of "driveTimeMM" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "driveTimeSS"
     */
    public function testPropertyDriveTimeSS()
    {
        $this->markTestIncomplete(
            'Test of "driveTimeSS" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "isOperationOnlyStop"
     */
    public function testPropertyIsOperationOnlyStop()
    {
        $this->markTestIncomplete(
            'Test of "isOperationOnlyStop" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "isPass"
     */
    public function testPropertyIsPass()
    {
        $this->markTestIncomplete(
            'Test of "isPass" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "hasBracket"
     */
    public function testPropertyHasBracket()
    {
        $this->markTestIncomplete(
            'Test of "hasBracket" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "isLastStop"
     */
    public function testPropertyIsLastStop()
    {
        $this->markTestIncomplete(
            'Test of "isLastStop" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "arrive"
     */
    public function testPropertyArrive()
    {
        $this->markTestIncomplete(
            'Test of "arrive" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "departure"
     */
    public function testPropertyDeparture()
    {
        $this->markTestIncomplete(
            'Test of "departure" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "runInLimit"
     */
    public function testPropertyRunInLimit()
    {
        $this->markTestIncomplete(
            'Test of "runInLimit" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "runOutLimit"
     */
    public function testPropertyRunOutLimit()
    {
        $this->markTestIncomplete(
            'Test of "runOutLimit" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "remarks"
     */
    public function testPropertyRemarks()
    {
        $this->markTestIncomplete(
            'Test of "remarks" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "markerColor"
     */
    public function testPropertyMarkerColor()
    {
        $this->markTestIncomplete(
            'Test of "markerColor" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "markerText"
     */
    public function testPropertyMarkerText()
    {
        $this->markTestIncomplete(
            'Test of "markerText" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "workType"
     */
    public function testPropertyWorkType()
    {
        $this->markTestIncomplete(
            'Test of "workType" property in "TRViSJsonTimetableRow" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = TRViSJsonTimetableRow::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}
