# Description: Sort method arguments to place required parameters before optional parameters.
sortParamsByRequiredFlag: true

# Description: Sort model properties to place required parameters before optional parameters.
sortModelPropertiesByRequiredFlag: true

# Description: Whether to ensure parameter names are unique in an operation (rename parameters that are not).
ensureUniqueParams: true

# Description: boolean, toggles whether unicode identifiers are allowed in names or not, default is false
allowUnicodeIdentifiers: false

# Description: Add form or body parameters to the beginning of the parameter list.
prependFormOrBodyParameters: false

# Description: Set to false for generators with better support for discriminators. (Python, Java, Go, PowerShell, C# have this enabled by default).
# Available Values:
#    true
#         The mapping in the discriminator includes descendent schemas that allOf inherit from self and the discriminator mapping schemas in the OAS document.
#    false
#         The mapping in the discriminator includes any descendent schemas that allOf inherit from self, any oneOf schemas, any anyOf schemas, any x-discriminator-values, and the discriminator mapping schemas in the OAS document AND Codegen validates that oneOf and anyOf schemas contain the required discriminator and throws an error if the discriminator is missing.
legacyDiscriminatorBehavior: true

# Description: If false, the 'additionalProperties' implementation (set to true by default) is compliant with the OAS and JSON schema specifications. If true (default), keep the old (incorrect) behaviour that 'additionalProperties' is set to false by default.
# Available Values:
#    false
#         The 'additionalProperties' implementation is compliant with the OAS and JSON schema specifications.
#    true
#         Keep the old (incorrect) behaviour that 'additionalProperties' is set to false by default.
disallowAdditionalPropertiesIfNotPresent: true

# Description: If the server adds new enum cases, that are unknown by an old spec/client, the client will fail to parse the network response.With this option enabled, each enum will have a new case, 'unknown_default_open_api', so that when the server sends an enum case that is not known by the client/spec, they can safely fallback to this case.
# Available Values:
#    false
#         No changes to the enum's are made, this is the default option.
#    true
#         With this option enabled, each enum will have a new case, 'unknown_default_open_api', so that when the enum case sent by the server is not known by the client/spec, can safely be decoded to this case.
enumUnknownDefaultCase: false

# Description: Suffix that will be appended to all enum names.
enumNameSuffix: Enum

# Description: Naming convention for enum properties: 'camelCase', 'PascalCase', 'snake_case', 'UPPERCASE', and 'original'
enumPropertyNaming: PascalCase

# Description: Generate code that conforms to ES6.
supportsES6: false

# Description: Naming convention for parameters: 'camelCase', 'PascalCase', 'snake_case' and 'original', which keeps the original name
paramNaming: camelCase

# Description: The name under which you want to publish generated npm package. Required to generate a full package
npmName: trvis-api

# Description: The version of your npm package. If not provided, using the version from the OpenAPI specification file.
npmVersion: 1.0.0

# Description: When setting this property to true, the version will be suffixed with -SNAPSHOT.yyyyMMddHHmm
snapshot: false

# Description: Set to make additional properties types declare that their indexer may return undefined
nullSafeAdditionalProps: false

# Description: Set to true to replace '-' and '+' symbols with 'minus_' and 'plus_' in enum of type string
enumPropertyNamingReplaceSpecialChar: false

# Description: Naming convention for the property: 'camelCase', 'PascalCase', 'snake_case' and 'original', which keeps the original name
modelPropertyNaming: camelCase

# Description: Use this property to set an url your private npmRepo in the package.json
# npmRepository:

# Description: Setting this property to true will generate interfaces next to the default class implementations.
withInterfaces: true

# Description: Setting this property to true will generate functions with a single argument containing all API endpoint parameters instead of one argument per parameter.
useSingleRequestParameter: true

# Description: Setting this property to true will generate parameter interface declarations prefixed with API class name to avoid name conflicts.
prefixParameterInterfaces: false

# Description: Setting this property to true will remove any runtime checks on the request and response payloads. Payloads will be casted to their expected types.
withoutRuntimeChecks: false

# Description: Setting this property to true will generate additional files for use with redux-saga and immutablejs.
sagasAndRecords: false

# Description: Generate string enums instead of objects for enum values.
stringEnums: false

# Description: File extension to use with relative imports. Set it to '.js' or '.mjs' when using [ESM](https://nodejs.org/api/esm.html).
# importFileExtension:

