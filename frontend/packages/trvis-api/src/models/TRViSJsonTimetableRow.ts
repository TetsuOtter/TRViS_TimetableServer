/* tslint:disable */
/* eslint-disable */
/**
 * TRViS用 時刻表管理用API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TRViSJsonTimetableRow
 */
export interface TRViSJsonTimetableRow {
    /**
     * 駅名 (4文字まで)
     * @type {string}
     * @memberof TRViSJsonTimetableRow
     */
    stationName: string;
    /**
     * 駅の位置 (m)
     * @type {number}
     * @memberof TRViSJsonTimetableRow
     */
    locationM: number;
    /**
     * 駅の経度 (度)
     * @type {number}
     * @memberof TRViSJsonTimetableRow
     */
    longitudeDeg?: number | null;
    /**
     * 駅の緯度 (度)
     * @type {number}
     * @memberof TRViSJsonTimetableRow
     */
    latitudeDeg?: number | null;
    /**
     * その駅にいるかどうかを判定する円の半径 (m)
     * @type {number}
     * @memberof TRViSJsonTimetableRow
     */
    onStationDetectRadiusM?: number | null;
    /**
     * 駅のフルネーム
     * @type {string}
     * @memberof TRViSJsonTimetableRow
     */
    fullName?: string | null;
    /**
     * 駅の種類
     * @type {number}
     * @memberof TRViSJsonTimetableRow
     */
    recordType?: number;
    /**
     * 駅の番線名
     * @type {string}
     * @memberof TRViSJsonTimetableRow
     */
    trackName?: string | null;
    /**
     * 駅間運転時間 (分)
     * @type {number}
     * @memberof TRViSJsonTimetableRow
     */
    driveTimeMM?: number;
    /**
     * 駅間運転時間 (秒)
     * @type {number}
     * @memberof TRViSJsonTimetableRow
     */
    driveTimeSS?: number;
    /**
     * 運転停車かどうか
     * @type {boolean}
     * @memberof TRViSJsonTimetableRow
     */
    isOperationOnlyStop?: boolean;
    /**
     * 通過駅かどうか
     * @type {boolean}
     * @memberof TRViSJsonTimetableRow
     */
    isPass?: boolean;
    /**
     * 到着時刻に括弧を付けるかどうか
     * @type {boolean}
     * @memberof TRViSJsonTimetableRow
     */
    hasBracket?: boolean;
    /**
     * 終着駅かどうか
     * @type {boolean}
     * @memberof TRViSJsonTimetableRow
     */
    isLastStop?: boolean;
    /**
     * 到着時刻
     * @type {string}
     * @memberof TRViSJsonTimetableRow
     */
    arrive?: string;
    /**
     * 出発時刻
     * @type {string}
     * @memberof TRViSJsonTimetableRow
     */
    departure?: string;
    /**
     * 進入制限 (km/h)
     * @type {number}
     * @memberof TRViSJsonTimetableRow
     */
    runInLimit?: number;
    /**
     * 進出制限 (km/h)
     * @type {number}
     * @memberof TRViSJsonTimetableRow
     */
    runOutLimit?: number;
    /**
     * 注意事項
     * @type {string}
     * @memberof TRViSJsonTimetableRow
     */
    remarks?: string;
    /**
     * マーカーの色
     * @type {string}
     * @memberof TRViSJsonTimetableRow
     */
    markerColor?: string;
    /**
     * マーカー部分に表示する文字列
     * @type {string}
     * @memberof TRViSJsonTimetableRow
     */
    markerText?: string;
    /**
     * 作業種別 (実装準備中)
     * @type {number}
     * @memberof TRViSJsonTimetableRow
     */
    workType?: number;
}

/**
 * Check if a given object implements the TRViSJsonTimetableRow interface.
 */
export function instanceOfTRViSJsonTimetableRow(value: object): value is TRViSJsonTimetableRow {
    if (!('stationName' in value) || value['stationName'] === undefined) return false;
    if (!('locationM' in value) || value['locationM'] === undefined) return false;
    return true;
}

export function TRViSJsonTimetableRowFromJSON(json: any): TRViSJsonTimetableRow {
    return TRViSJsonTimetableRowFromJSONTyped(json, false);
}

export function TRViSJsonTimetableRowFromJSONTyped(json: any, ignoreDiscriminator: boolean): TRViSJsonTimetableRow {
    if (json == null) {
        return json;
    }
    return {
        
        'stationName': json['StationName'],
        'locationM': json['Location_m'],
        'longitudeDeg': json['Longitude_deg'] == null ? undefined : json['Longitude_deg'],
        'latitudeDeg': json['Latitude_deg'] == null ? undefined : json['Latitude_deg'],
        'onStationDetectRadiusM': json['OnStationDetectRadius_m'] == null ? undefined : json['OnStationDetectRadius_m'],
        'fullName': json['FullName'] == null ? undefined : json['FullName'],
        'recordType': json['RecordType'] == null ? undefined : json['RecordType'],
        'trackName': json['TrackName'] == null ? undefined : json['TrackName'],
        'driveTimeMM': json['DriveTime_MM'] == null ? undefined : json['DriveTime_MM'],
        'driveTimeSS': json['DriveTime_SS'] == null ? undefined : json['DriveTime_SS'],
        'isOperationOnlyStop': json['IsOperationOnlyStop'] == null ? undefined : json['IsOperationOnlyStop'],
        'isPass': json['IsPass'] == null ? undefined : json['IsPass'],
        'hasBracket': json['HasBracket'] == null ? undefined : json['HasBracket'],
        'isLastStop': json['IsLastStop'] == null ? undefined : json['IsLastStop'],
        'arrive': json['Arrive'] == null ? undefined : json['Arrive'],
        'departure': json['Departure'] == null ? undefined : json['Departure'],
        'runInLimit': json['RunInLimit'] == null ? undefined : json['RunInLimit'],
        'runOutLimit': json['RunOutLimit'] == null ? undefined : json['RunOutLimit'],
        'remarks': json['Remarks'] == null ? undefined : json['Remarks'],
        'markerColor': json['MarkerColor'] == null ? undefined : json['MarkerColor'],
        'markerText': json['MarkerText'] == null ? undefined : json['MarkerText'],
        'workType': json['WorkType'] == null ? undefined : json['WorkType'],
    };
}

export function TRViSJsonTimetableRowToJSON(value?: TRViSJsonTimetableRow | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'StationName': value['stationName'],
        'Location_m': value['locationM'],
        'Longitude_deg': value['longitudeDeg'],
        'Latitude_deg': value['latitudeDeg'],
        'OnStationDetectRadius_m': value['onStationDetectRadiusM'],
        'FullName': value['fullName'],
        'RecordType': value['recordType'],
        'TrackName': value['trackName'],
        'DriveTime_MM': value['driveTimeMM'],
        'DriveTime_SS': value['driveTimeSS'],
        'IsOperationOnlyStop': value['isOperationOnlyStop'],
        'IsPass': value['isPass'],
        'HasBracket': value['hasBracket'],
        'IsLastStop': value['isLastStop'],
        'Arrive': value['arrive'],
        'Departure': value['departure'],
        'RunInLimit': value['runInLimit'],
        'RunOutLimit': value['runOutLimit'],
        'Remarks': value['remarks'],
        'MarkerColor': value['markerColor'],
        'MarkerText': value['markerText'],
        'WorkType': value['workType'],
    };
}

