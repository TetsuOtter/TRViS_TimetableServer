/* tslint:disable */
/* eslint-disable */
/**
 * TRViS用 時刻表管理用API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Train
 */
export interface Train {
    /**
     * Train (列車) の説明
     * @type {string}
     * @memberof Train
     */
    description: string;
    /**
     * 列車番号
     * @type {string}
     * @memberof Train
     */
    trainNumber: string;
    /**
     * 進行方向 (0~1: 下り, -1: 上り)
     * @type {number}
     * @memberof Train
     */
    direction: number;
    /**
     * 仕業の初日からの経過日数 (0で初日/日勤、1で明け)
     * @type {number}
     * @memberof Train
     */
    dayCount: number;
    /**
     * TrainのID (UUID)
     * @type {string}
     * @memberof Train
     */
    readonly trainsId?: string;
    /**
     * WorkのID (UUID)
     * @type {string}
     * @memberof Train
     */
    readonly worksId?: string;
    /**
     * 作成日時
     * @type {Date}
     * @memberof Train
     */
    readonly createdAt?: Date;
    /**
     * 最高速度 (km/h)
     * @type {string}
     * @memberof Train
     */
    maxSpeed?: string;
    /**
     * 速度種別
     * @type {string}
     * @memberof Train
     */
    speedType?: string;
    /**
     * けん引定数
     * @type {string}
     * @memberof Train
     */
    nominalTractiveCapacity?: string;
    /**
     * 編成両数 (0以下で非表示)
     * @type {number}
     * @memberof Train
     */
    carCount?: number;
    /**
     * 行先
     * @type {string}
     * @memberof Train
     */
    destination?: string;
    /**
     * 乗車前の注意事項 (「乗継」など)
     * @type {string}
     * @memberof Train
     */
    beginRemarks?: string;
    /**
     * 降車後の注意事項 (「乗継」など)
     * @type {string}
     * @memberof Train
     */
    afterRemarks?: string;
    /**
     * 注意事項
     * @type {string}
     * @memberof Train
     */
    remarks?: string;
    /**
     * 発前
     * @type {string}
     * @memberof Train
     */
    beforeDeparture?: string;
    /**
     * 着後
     * @type {string}
     * @memberof Train
     */
    afterArrive?: string;
    /**
     * 列車に関する情報
     * @type {string}
     * @memberof Train
     */
    trainInfo?: string;
    /**
     * 添乗での移動かどうか
     * @type {boolean}
     * @memberof Train
     */
    isRideOnMoving?: boolean;
}

/**
 * Check if a given object implements the Train interface.
 */
export function instanceOfTrain(value: object): value is Train {
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('trainNumber' in value) || value['trainNumber'] === undefined) return false;
    if (!('direction' in value) || value['direction'] === undefined) return false;
    if (!('dayCount' in value) || value['dayCount'] === undefined) return false;
    return true;
}

export function TrainFromJSON(json: any): Train {
    return TrainFromJSONTyped(json, false);
}

export function TrainFromJSONTyped(json: any, ignoreDiscriminator: boolean): Train {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'],
        'trainNumber': json['train_number'],
        'direction': json['direction'],
        'dayCount': json['day_count'],
        'trainsId': json['trains_id'] == null ? undefined : json['trains_id'],
        'worksId': json['works_id'] == null ? undefined : json['works_id'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'maxSpeed': json['max_speed'] == null ? undefined : json['max_speed'],
        'speedType': json['speed_type'] == null ? undefined : json['speed_type'],
        'nominalTractiveCapacity': json['nominal_tractive_capacity'] == null ? undefined : json['nominal_tractive_capacity'],
        'carCount': json['car_count'] == null ? undefined : json['car_count'],
        'destination': json['destination'] == null ? undefined : json['destination'],
        'beginRemarks': json['begin_remarks'] == null ? undefined : json['begin_remarks'],
        'afterRemarks': json['after_remarks'] == null ? undefined : json['after_remarks'],
        'remarks': json['remarks'] == null ? undefined : json['remarks'],
        'beforeDeparture': json['before_departure'] == null ? undefined : json['before_departure'],
        'afterArrive': json['after_arrive'] == null ? undefined : json['after_arrive'],
        'trainInfo': json['train_info'] == null ? undefined : json['train_info'],
        'isRideOnMoving': json['is_ride_on_moving'] == null ? undefined : json['is_ride_on_moving'],
    };
}

export function TrainToJSON(value?: Omit<Train, 'trains_id'|'works_id'|'created_at'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'description': value['description'],
        'train_number': value['trainNumber'],
        'direction': value['direction'],
        'day_count': value['dayCount'],
        'max_speed': value['maxSpeed'],
        'speed_type': value['speedType'],
        'nominal_tractive_capacity': value['nominalTractiveCapacity'],
        'car_count': value['carCount'],
        'destination': value['destination'],
        'begin_remarks': value['beginRemarks'],
        'after_remarks': value['afterRemarks'],
        'remarks': value['remarks'],
        'before_departure': value['beforeDeparture'],
        'after_arrive': value['afterArrive'],
        'train_info': value['trainInfo'],
        'is_ride_on_moving': value['isRideOnMoving'],
    };
}

