{
	"root": true,
	"env": {
		"browser": true,
		"es2021": true
	},
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/strict",
		"plugin:@typescript-eslint/stylistic",
		"plugin:react/all",
		"plugin:react-hooks/recommended",
		"plugin:import/recommended",
		"plugin:import/typescript",
		"plugin:prettier/recommended"
	],
	"ignorePatterns": [
		"node_modules/",
		"dist/",
		"src/oas/",
		"vite.config.ts",
		"i18next-parser.config.ts"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": "latest",
		"sourceType": "module",
		"project": "./tsconfig.json"
	},
	"settings": {
		"react": {
			"version": "detect"
		}
	},
	"rules": {
		"react/jsx-uses-react": "off",
		"react/react-in-jsx-scope": "off",
		"@typescript-eslint/ban-ts-comment": [
			"error",
			{
				"ts-expect-error": "allow-with-description",
				"ts-ignore": false,
				"ts-nocheck": false,
				"ts-check": false
			}
		],
		"import/order": [
			"error",
			{
				"groups": [
					"builtin",
					"external",
					"internal",
					"parent",
					"sibling",
					"index",
					"object",
					"type",
					"unknown"
				],
				"pathGroups": [
					{
						"pattern": "{react,react-dom/**,react-router-dom}",
						"group": "builtin",
						"position": "before"
					}
				],
				"pathGroupsExcludedImportTypes": ["builtin", "object"],
				"alphabetize": {
					"order": "asc"
				},
				"newlines-between": "always"
			}
		],
		"@typescript-eslint/consistent-type-imports": [
			"error",
			{ "prefer": "type-imports" }
		],
		"@typescript-eslint/strict-boolean-expressions": [
			"error",
			{
				"allowString": false,
				"allowNumber": false,
				"allowNullableObject": false
			}
		],
		"react/function-component-definition": [
			"error",
			{
				"namedComponents": "arrow-function",
				"unnamedComponents": "arrow-function"
			}
		],
		"react/jsx-filename-extension": [
			"error",
			{
				"extensions": [".tsx"]
			}
		],
		"react/jsx-max-depth": [
			"warn",
			{
				"max": 4
			}
		],
		"react/jsx-sort-props": "off",
		"react/require-default-props": "off",
		"react/jsx-no-bind": [
			"error",
			{
				"allowArrowFunctions": true
			}
		],
		"react/jsx-props-no-spreading": "off",
		"react/jsx-no-useless-fragment": [
			"error",
			{
				"allowExpressions": true
			}
		],
		"@typescript-eslint/consistent-type-definitions": ["error", "type"],
		"@typescript-eslint/no-invalid-void-type": "off"
	}
}
