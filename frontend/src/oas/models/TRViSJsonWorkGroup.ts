/* tslint:disable */
/* eslint-disable */
/**
 * TRViS用 時刻表管理用API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TRViSJsonWork } from './TRViSJsonWork';
import {
    TRViSJsonWorkFromJSON,
    TRViSJsonWorkFromJSONTyped,
    TRViSJsonWorkToJSON,
} from './TRViSJsonWork';

/**
 * 
 * @export
 * @interface TRViSJsonWorkGroup
 */
export interface TRViSJsonWorkGroup {
    /**
     * WorkGroupの名前
     * @type {string}
     * @memberof TRViSJsonWorkGroup
     */
    name: string;
    /**
     * このWorkGroupに属するWorkの配列
     * @type {Array<TRViSJsonWork>}
     * @memberof TRViSJsonWorkGroup
     */
    works: Array<TRViSJsonWork>;
    /**
     * このDB構造のバージョン情報
     * @type {number}
     * @memberof TRViSJsonWorkGroup
     */
    dBVersion?: number;
}

/**
 * Check if a given object implements the TRViSJsonWorkGroup interface.
 */
export function instanceOfTRViSJsonWorkGroup(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "works" in value;

    return isInstance;
}

export function TRViSJsonWorkGroupFromJSON(json: any): TRViSJsonWorkGroup {
    return TRViSJsonWorkGroupFromJSONTyped(json, false);
}

export function TRViSJsonWorkGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): TRViSJsonWorkGroup {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['Name'],
        'works': ((json['Works'] as Array<any>).map(TRViSJsonWorkFromJSON)),
        'dBVersion': !exists(json, 'DBVersion') ? undefined : json['DBVersion'],
    };
}

export function TRViSJsonWorkGroupToJSON(value?: TRViSJsonWorkGroup | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Name': value.name,
        'Works': ((value.works as Array<any>).map(TRViSJsonWorkToJSON)),
        'DBVersion': value.dBVersion,
    };
}

