// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * TRViS用 時刻表管理用API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TRViSJsonTimetableRow } from './TRViSJsonTimetableRow';
import {
    TRViSJsonTimetableRowFromJSON,
    TRViSJsonTimetableRowFromJSONTyped,
    TRViSJsonTimetableRowToJSON,
} from './TRViSJsonTimetableRow';

/**
 * 
 * @export
 * @interface TRViSJsonTrain
 */
export interface TRViSJsonTrain {
    /**
     * 列車番号
     * @type {string}
     * @memberof TRViSJsonTrain
     */
    trainNumber: string;
    /**
     * 進行方向 (0~1: 下り, -1: 上り)
     * @type {number}
     * @memberof TRViSJsonTrain
     */
    direction: number;
    /**
     * このTrainに属するTimetableRowの配列
     * @type {Array<TRViSJsonTimetableRow>}
     * @memberof TRViSJsonTrain
     */
    timetableRows: Array<TRViSJsonTimetableRow>;
    /**
     * 最高速度
     * @type {string}
     * @memberof TRViSJsonTrain
     */
    maxSpeed?: string | null;
    /**
     * 速度種別
     * @type {string}
     * @memberof TRViSJsonTrain
     */
    speedType?: string | null;
    /**
     * けん引定数
     * @type {string}
     * @memberof TRViSJsonTrain
     */
    nominalTractiveCapacity?: string | null;
    /**
     * 車両数
     * @type {number}
     * @memberof TRViSJsonTrain
     */
    carCount?: number | null;
    /**
     * 行先
     * @type {string}
     * @memberof TRViSJsonTrain
     */
    destination?: string | null;
    /**
     * 乗車前の注意事項 (「乗継」など)
     * @type {string}
     * @memberof TRViSJsonTrain
     */
    beginRemarks?: string | null;
    /**
     * 降車後の注意事項 (「乗継」など)
     * @type {string}
     * @memberof TRViSJsonTrain
     */
    afterRemarks?: string | null;
    /**
     * 注意事項
     * @type {string}
     * @memberof TRViSJsonTrain
     */
    remarks?: string | null;
    /**
     * 発前
     * @type {string}
     * @memberof TRViSJsonTrain
     */
    beforeDeparture?: string | null;
    /**
     * 列車に関する情報
     * @type {string}
     * @memberof TRViSJsonTrain
     */
    trainInfo?: string | null;
    /**
     * 発前
     * @type {string}
     * @memberof TRViSJsonTrain
     */
    afterArrive?: string | null;
    /**
     * 仕業の初日からの経過日数 (0で初日/日勤、1で明け)
     * @type {number}
     * @memberof TRViSJsonTrain
     */
    dayCount?: number;
    /**
     * 添乗での移動かどうか
     * @type {boolean}
     * @memberof TRViSJsonTrain
     */
    isRideOnMoving?: boolean;
}

/**
 * Check if a given object implements the TRViSJsonTrain interface.
 */
export function instanceOfTRViSJsonTrain(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "trainNumber" in value;
    isInstance = isInstance && "direction" in value;
    isInstance = isInstance && "timetableRows" in value;

    return isInstance;
}

export function TRViSJsonTrainFromJSON(json: any): TRViSJsonTrain {
    return TRViSJsonTrainFromJSONTyped(json, false);
}

export function TRViSJsonTrainFromJSONTyped(json: any, ignoreDiscriminator: boolean): TRViSJsonTrain {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'trainNumber': json['TrainNumber'],
        'direction': json['Direction'],
        'timetableRows': ((json['TimetableRows'] as Array<any>).map(TRViSJsonTimetableRowFromJSON)),
        'maxSpeed': !exists(json, 'MaxSpeed') ? undefined : json['MaxSpeed'],
        'speedType': !exists(json, 'SpeedType') ? undefined : json['SpeedType'],
        'nominalTractiveCapacity': !exists(json, 'NominalTractiveCapacity') ? undefined : json['NominalTractiveCapacity'],
        'carCount': !exists(json, 'CarCount') ? undefined : json['CarCount'],
        'destination': !exists(json, 'Destination') ? undefined : json['Destination'],
        'beginRemarks': !exists(json, 'BeginRemarks') ? undefined : json['BeginRemarks'],
        'afterRemarks': !exists(json, 'AfterRemarks') ? undefined : json['AfterRemarks'],
        'remarks': !exists(json, 'Remarks') ? undefined : json['Remarks'],
        'beforeDeparture': !exists(json, 'BeforeDeparture') ? undefined : json['BeforeDeparture'],
        'trainInfo': !exists(json, 'TrainInfo') ? undefined : json['TrainInfo'],
        'afterArrive': !exists(json, 'AfterArrive') ? undefined : json['AfterArrive'],
        'dayCount': !exists(json, 'DayCount') ? undefined : json['DayCount'],
        'isRideOnMoving': !exists(json, 'IsRideOnMoving') ? undefined : json['IsRideOnMoving'],
    };
}

export function TRViSJsonTrainToJSON(value?: TRViSJsonTrain | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'TrainNumber': value.trainNumber,
        'Direction': value.direction,
        'TimetableRows': ((value.timetableRows as Array<any>).map(TRViSJsonTimetableRowToJSON)),
        'MaxSpeed': value.maxSpeed,
        'SpeedType': value.speedType,
        'NominalTractiveCapacity': value.nominalTractiveCapacity,
        'CarCount': value.carCount,
        'Destination': value.destination,
        'BeginRemarks': value.beginRemarks,
        'AfterRemarks': value.afterRemarks,
        'Remarks': value.remarks,
        'BeforeDeparture': value.beforeDeparture,
        'TrainInfo': value.trainInfo,
        'AfterArrive': value.afterArrive,
        'DayCount': value.dayCount,
        'IsRideOnMoving': value.isRideOnMoving,
    };
}

