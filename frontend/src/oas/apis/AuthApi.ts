// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * TRViS用 時刻表管理用API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Schema,
  TokenRequest,
  TokenResponse,
} from '../models/index';
import {
    SchemaFromJSON,
    SchemaToJSON,
    TokenRequestFromJSON,
    TokenRequestToJSON,
    TokenResponseFromJSON,
    TokenResponseToJSON,
} from '../models/index';

export interface IssueTokenRequest {
    tokenRequest?: TokenRequest;
}

/**
 * AuthApi - interface
 * 
 * @export
 * @interface AuthApiInterface
 */
export interface AuthApiInterface {
    /**
     * APIへのアクセスで使用するJWTを発行する
     * @summary (未実装) 認証トークンを発行
     * @param {TokenRequest} [tokenRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApiInterface
     */
    issueTokenRaw(requestParameters: IssueTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TokenResponse>>;

    /**
     * APIへのアクセスで使用するJWTを発行する
     * (未実装) 認証トークンを発行
     */
    issueToken(requestParameters: IssueTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TokenResponse>;

}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI implements AuthApiInterface {

    /**
     * APIへのアクセスで使用するJWTを発行する
     * (未実装) 認証トークンを発行
     */
    async issueTokenRaw(requestParameters: IssueTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TokenResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/auths`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TokenRequestToJSON(requestParameters.tokenRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TokenResponseFromJSON(jsonValue));
    }

    /**
     * APIへのアクセスで使用するJWTを発行する
     * (未実装) 認証トークンを発行
     */
    async issueToken(requestParameters: IssueTokenRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TokenResponse> {
        const response = await this.issueTokenRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
